const express = require("express");
const db = require("../sqlconnection");
const { userAuth } = require("../middleware/auth");
const router = express.Router();

/**
 * POST /api/consumed
 * Mark as consumed *and* update target.isConsumed = 1.
 * QUERY: ?date=<date>&foodId=<number>
 */
router.post("/consumed", userAuth, (req, res) => {
  const userId = req.userInfo.user.id;
  const { date, foodId } = req.query;

  if (!date || !foodId) {
    return res.status(400).json({ error: "date and foodId are required" });
  }

  const insert = `
    INSERT INTO consumed_food (userId, date, foodId)
    VALUES (?, ?, ?)
    ON DUPLICATE KEY UPDATE createdAt = CURRENT_TIMESTAMP
  `;

  db.execute(insert, [userId, date, foodId], (err) => {
    if (err) return res.status(500).json({ error: "Database error" });

    const upd = `
      UPDATE target
         SET isConsumed = 1
       WHERE userId = ? AND date = ? AND foodId = ?
    `;
    db.execute(upd, [userId, date, foodId], (err2) => {
      if (err2) console.error("Warning: failed to update target flag", err2);
    });

    res.status(200).json({ message: "Marked as consumed" });
  });
});

/**
 * GET /api/consumed/:date
 * Retrieve consumed foods for a specific date.
 */
router.get("/consumed/:date", userAuth, (req, res) => {
  const userId = userInfo.user.id;
  const { date } = req.params;

  if (!date) {
    return res.status(400).json({ error: "date is required" });
  }

  const query = `
    SELECT
      cf.foodId AS id,
      f.name,
      f.kcal,
      f.p, f.c, f.f,
      f.image,
      f.isVeg,
      f.mealType,
      f.recipe
    FROM consumed_food AS cf
    JOIN food_items AS f
      ON cf.foodId = f.id
    WHERE cf.userId = ?
      AND cf.date = ?
    ORDER BY f.mealType, f.name
  `;
  db.execute(query, [userId, date], (err, rows) => {
    if (err) {
      console.error(err);
      return res.status(500).json({ error: "Database error" });
    }
    res.json(rows);
  });
});

/**
 * DELETE /api/consumed
 * Unmark consumed *and* update target.isConsumed = 0.
 * QUERY: ?date=<date>&foodId=<number>
 */
router.delete("/consumed", userAuth, (req, res) => {
  const userId = req.userInfo.user.id;
  const { date, foodId } = req.query;

  if (!date || !foodId) {
    return res.status(400).json({ error: "date and foodId are required" });
  }

  const del = `
    DELETE FROM consumed_food
     WHERE userId = ? AND date = ? AND foodId = ?
  `;
  db.execute(del, [userId, date, foodId], (err, result) => {
    if (err) return res.status(500).json({ error: "Database error" });

    if (result.affectedRows === 0) {
      return res.status(404).json({ message: "Not marked consumed" });
    }

    const upd = `
      UPDATE target
         SET isConsumed = 0
       WHERE userId = ? AND date = ? AND foodId = ?
    `;
    db.execute(upd, [userId, date, foodId], (err2) => {
      if (err2) console.error("Warning: failed to update target flag", err2);
    });

    res.json({ message: "Unmarked as consumed" });
  });
});

module.exports = router;
